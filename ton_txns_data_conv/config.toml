# TON Information
# This configuration file contains settings for the TON API and the TON Whales Staking Amount History application.
# (*): required fields

[ton_info]
# References:
#   https://docs.ton.org/learn/overviews/addresses
#   https://docs.ton.org/develop/dapps/cookbook#working-with-contracts-addresses

# User-friendly address (*)
# This is the human-readable form of your TON wallet address
user_friendly_address = ""

# Raw address
# This is the base64 encoded form of your TON wallet address
# For more information, refer to: https://ton.org/address/
raw_address = ""

# Pool Address
# Required when getting TON staking data
# Note: If staked to a different pool, please specify its address.
# Reference: https://tonwhales.com/staking/pool/nominators
# This example uses Whales Nominators Queue #2
pool_address = ""

# Use Address for Tonhub API V4
# Required when getting TON staking data
# Reference: https://github.com/ton-community/ton-api-v4?tab=readme-ov-file#run-get-method-of-account-at-block
# Note: Addresses used on the TON Whales Staking Stats page:
#   1. Access the TON Whales Staking page https://tonwhales.com/staking
#   2. Connect to Wallet Connect with your staking Wallet and press \"Next\" under Check your staking balance to access the Staking Stats page.
#   3. Go to Details in Your Pools and activate developer mode (F12)
#   4. Check the GET request for the get_member command in the Network tab of the developer tools
get_member_use_address = ""

# Transaction History Period (*)
# Obtains transaction history for the "transaction_history_period" period
# based on the timestamp at the time the script is executed. (default is 365)
# Reference: https://toncenter.com/api/v3/#/default/get_transactions_api_v3_transactions_get
#   start_utime: Query transactions with generation UTC timestamp after given timestamp.
#   end_utime: Query transactions with generation UTC timestamp before given timestamp.
transaction_history_period = 365

[staking_info]
# Settings for calculating staking rewards

# Use Timezone for Tonhub API V4
# Required when getting TON staking data.
# Important:
#   TON transactions do not have a schema for recording individual staking reward data for each stake source address.
#   Therefore, staking reward data is calculated and generated from the stake originator's balance obtained from the block information.
#   Specifically, the difference between the balances corresponding to seqno (N-1) and seqno (N) in a particular acquisition range is calculated,
#   and if the value is above the threshold, the reward is considered granted.
#   The amount of reward depends on the number of stakes.
#   Please change Adjust Value to match the value of AMOUNT on the graph.
staking_calculation_adjustment_value = 5

# Use Hour Infomation for Tonhub API V4
# Note:
#   Required when getting TON staking data.
#   The timezone in this script is set to Japan Standard Time (JST).
#   If you're in a different timezone, you need to modify the `local_timezone` to match your local timezone.
local_timezone = 9

[ton_api_info]
# API Key for pytonapi library
# Required when using pytonapi library
# Reference:
#   https://github.com/tonkeeper/pytonapi
#   https://docs.tonconsole.com/tonapi
api_key = ""

[file_save_option]
# Set to true if you want to save the files (default is true)
save_allow_json = true
save_allow_csv = true

# The CSV file is created in the custom file format for staking rewards in Cryptact.
# Reference:
#   https://support.cryptact.com/hc/en-us/articles/360002571312-Custom-File-for-any-other-trades#menu210> for more information on the custom file format.
save_allow_stkrwd = true

[cryptact_info]
# The counter currency for staking rewards (e.g., "JPY" for Japanese Yen)
counter = "JPY"

[debug_info]
enable_tracing = false
