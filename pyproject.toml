[tool.poetry]
name = "ton-txns-data-conv"
version = "0.1.2"
description = "The TON Transactions data converter is a project aimed at retrieving and converting transaction data recorded on the TON blockchain."
authors = ["7rikazhexde"]
license = "MIT"
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
pytonapi = "^0.3.1"
pandas = "^2.2.2"
tomlkit = "^0.12.5"
requests = "^2.32.3"
dash = "^2.17.1"
aiohttp = "^3.9.5"
types-requests = "^2.32.0.20240622"
dash-bootstrap-components = "^1.6.0"
pytoniq-core = "^0.1.36"


[tool.poetry.group.dev.dependencies]
pre-commit = "^3.7.1"
ruff = "^0.4.9"
mypy = "^1.10.0"
taskipy = "^1.12.2"
pytest = "^8.2.2"
pytest-xdist = "^3.6.1"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Check Rules
lint.select = ["E", "F", "I"]
# Ignore Error
lint.ignore = ["E402","E501"]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
lint.per-file-ignores= {}

# Assume Python 3.10.
target-version = "py310"

[tool.mypy]
files = ["ton_txns_data_conv"]
python_version = "3.12"
show_error_context = true
show_column_numbers = true
# Do not check import destinations (by default, even third-party libraries are checked)
ignore_missing_imports = true
# Type annotation required for arguments/return values in function definitions
disallow_untyped_defs = true
# Optional required for type annotation if default argument is None
no_implicit_optional = true
# Warning when the type annotation of the return value of a function whose return value is not of type Any is Any
warn_return_any = true
# Warning if `# type: ignore` comment is given to a place that does not correspond to a mypy error.
# * If `# type: ignore` is given, mypy errors can be ignored.
warn_unused_ignores = true
# Warning for redundant casts
warn_redundant_casts = true
